import java.text.SimpleDateFormat

buildscript {
    ext.kotlin_version = '1.4.21'
    repositories {
        jcenter()
        mavenCentral()
        google()
        mavenLocal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'

    //Lombok
    id 'war'

    // Kotlin
    id 'org.jetbrains.kotlin.jvm'  version '1.4.21'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.21'
}

apply plugin: 'war'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.millennium.library'
version '1.0-SNAPSHOT'

description = 'Bungeecord plugin used for reducing sizes of Kotlin plugins'

sourceCompatibility = 1.8
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenCentral()
    google()
    mavenLocal()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.1"

    // Ktor
    implementation "io.ktor:ktor-client-gson:1.5.1"
    implementation "io.ktor:ktor-client-serialization:1.5.1"

    compile fileTree(dir: "libraries/compile", include: ["*.jar"])
    compileOnly fileTree(dir: "libraries/compileOnly", include: ["*.jar"])
    implementation fileTree(dir: "libraries/implementation", include: ["*.jar"])

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.1"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"

    // https://mvnrepository.com/artifact/org.snakeyaml/snakeyaml-engine
    compile group: 'org.snakeyaml', name: 'snakeyaml-engine', version: '2.2.1'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    // https://mvnrepository.com/artifact/org.jetbrains.exposed/exposed-core
    compile group: 'org.jetbrains.exposed', name: 'exposed-core', version: '0.25.1'
    // https://mvnrepository.com/artifact/org.jetbrains.exposed/exposed-dao
    compile group: 'org.jetbrains.exposed', name: 'exposed-dao' , version: '0.25.1'
    // https://mvnrepository.com/artifact/org.jetbrains.exposed/exposed-java-time
    compile group: 'org.jetbrains.exposed', name: 'exposed-java-time', version: '0.25.1'
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    compile group: 'com.zaxxer', name: 'HikariCP', version: '4.0.1'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'

    testCompile 'org.jetbrains.kotlin:kotlin-test'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
}

compileJava.dependsOn clean

compileKotlin {
    kotlinOptions.freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    kotlinOptions {
        jvmTarget = sourceCompatibility
    }
}

shadowJar {
    manifest {
        attributes(
                'Built-By': "misuda12",
                'Version': project.version,
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd' 'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Class-Path': project.configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}

build.dependsOn shadowJar

publishing {
    publications {
        it.withType(MavenPublication) {
            from {
                components.java
            }
        }
    }
}